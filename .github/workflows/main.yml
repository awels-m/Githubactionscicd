name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Workflow-level env (non-secret)
env:
  CUSTOM_VAR: "hello-from-workflow"

jobs:
  build:
    runs-on: ubuntu-latest          # change to macos-latest if you prefer

    # Expose the secret to this job as an environment variable
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Show env var
        run: echo "CUSTOM_VAR is $CUSTOM_VAR"

      - name: Install dependencies
        run: npm ci

      - name: Build (only on push to main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: npm run build

      - name: Run tests
        run: npm test

      # Produce an output for next step (modern way)
      - id: compute
        name: Compute value
        run: |
          echo "value=hello-from-step-one" >> "$GITHUB_OUTPUT"

      # Consume the output
      - name: Use previous step output
        run: |
          echo "Received: ${{ steps.compute.outputs.value }}"

      # Use a secret (safe demo) — guarded by env.ACCESS_TOKEN
      - name: Use secret (safe demo)
        if: ${{ env.ACCESS_TOKEN != '' }}   # only runs if secret exists
        run: |
          echo "Secret length is ${#ACCESS_TOKEN}"
          # Example (do not print the token):
          # curl -H "Authorization: Bearer $ACCESS_TOKEN" https://api.example.com/me

  test-matrix:
    name: Test (Node ${{ matrix.node }} • ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20, 22, 24]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
